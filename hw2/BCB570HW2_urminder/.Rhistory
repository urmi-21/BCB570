install.packages("igraph")
library("igraph")
5stargraph <- graph(combn(1:5, 2), directed = FALSE)
plot.igraph(completegraph)
#HW2
library("igraph")
5stargraph <- graph(combn(1:5, 2), directed = FALSE)
plot.igraph(5stargraph)
#HW2
library("igraph")
5stargraph <- graph(combn(1:5, 2), directed = FALSE)
fivestargraph <- graph(combn(1:5, 2), directed = FALSE)
plot.igraph(fivestargraph)
install.packages("rmarkdown")
Sys.which("pdflatex")
setwd("D:/courses/sem4/bcb570/hw")
load("D:/courses/sem4/bcb570/hw/.RData")
fitA <- power.law.fit(degree(graphA,mode="all"),implementation="plfit")
library("igraph", lib.loc="~/R/win-library/3.4")
fitA <- power.law.fit(degree(graphA,mode="all"),implementation="plfit")
fitA
fitA <- power.law.fit(degree(graphA,mode="all"))
fitA
?power.law.fit
fitA <- power.law.fit(degree(graphA,mode="all"),implementation="R.mle")
fitA
stats4::plot()
stats4::logLik()
fitA <- power.law.fit(degree(graphA,mode="all"),implementation="plfit")
fitB <- power.law.fit(degree(graphB,mode="all"),implementation="plfit")
fitC <- power.law.fit(degree(graphC,mode="all"),implementation="plfit")
head6<-c("GraphA","GraphB","GraphC")
tab6<-data.frame(Graph=head6,Alpha=c(fitA$alpha,fitB$alpha,fitC$alpha),X_min=c(fitA$xmin,fitB$xmin,fitC$xmin),KS_stat=c(fitA$KS.stat,fitB$KS.stat,fitC$KS.stat),P_Value=c(fitA$KS.p,fitB$KS.p,fitC$KS.p),logLik=c(fitA$logLik,fitB$logLik,fitC$logLik))
?read_graph
#read GraphA
graphA<-read_graph('graphA.txt',format = "edgelist")
vcA<-vcount(graphA)
ecA<-ecount(graphA)
densityA<-graph.density(graphA)
diaA<-diameter(graphA)
radA<-radius(graphA)
diaA<-diameter(graphA,directed = "false")
vcA<-vcount(graphA,directed = "false")
ecA<-ecount(graphA,directed = "false")
densityA<-graph.density(graphA,directed = "false")
diaA<-diameter(graphA,directed = "false")
radA<-radius(graphA,directed = "false")
#read GraphB
graphB<-read_graph('graphB.txt')
vcB<-vcount(graphB,directed = "false")
ecB<-ecount(graphB,directed = "false")
densityB<-graph.density(graphB,directed = "false")
diaB<-diameter(graphB,directed = "false")
vcA<-vcount(graphA,directed = "false")
ecA<-ecount(graphA,directed = "false")
densityA<-graph.density(graphA,directed = "false")
diaA<-diameter(graphA,directed = "false")
radA<-radius(graphA,directed = "false")
#read GraphA
graphA<-read_graph('graphA.txt',format = "edgelist")
vcA<-vcount(graphA)
densityA<-graph.density(graphA)
ecA<-ecount(graphA)
diaA<-diameter(graphA,directed = "false")
radA<-radius(graphA)
#read GraphB
graphB<-read_graph('graphB.txt')
vcB<-vcount(graphB)
ecB<-ecount(graphB)
densityB<-graph.density(graphB)
diaB<-diameter(graphB,directed = "false")
radB<-radius(graphB)
#read GraphC
graphC<-read_graph('graphC.txt')
vcC<-vcount(graphC)
ecC<-ecount(graphC)
densityC<-graph.density(graphC)
diaC<-diameter(graphC,directed = "false")
radC<-radius(graphC)
header<-c("#Vertices","#Edges","Density")
tab1<-data.frame(Feature=header,GraphA=c(vcA,ecA,densityA),GraphB=c(vcB,ecB,densityB),GraphC=c(vcC,ecC,densityC))
header2<-c("Radius","Diameter")
tab2<-data.frame(Feature=header2,GraphA=c(radA,diaA),GraphB=c(radB,diaB),GraphC=c(radC,diaC))
?mean_distance
#compute avg shortest dist
mdA<-mean_distance(graphA,directed = "false")
mdB<-mean_distance(graphB,directed = "false")
mdC<-mean_distance(graphC,directed = "false")
fitA <- power.law.fit(degree(graphA,mode="all"),implementation="plfit")
fitA <- power.law.fit(degree(graphA,mode="all"),implementation="plfit")
fitB <- power.law.fit(degree(graphB,mode="all"),implementation="plfit")
fitC <- power.law.fit(degree(graphC,mode="all"),implementation="plfit")
head6<-c("GraphA","GraphB","GraphC")
tab6<-data.frame(Graph=head6,Alpha=c(fitA$alpha,fitB$alpha,fitC$alpha),X_min=c(fitA$xmin,fitB$xmin,fitC$xmin),KS_stat=c(fitA$KS.stat,fitB$KS.stat,fitC$KS.stat),P_Value=c(fitA$KS.p,fitB$KS.p,fitC$KS.p),logLik=c(fitA$logLik,fitB$logLik,fitC$logLik))
?degree
?graph.density
g1 <- make_empty_graph(n=10)
g1
plot.igraph(g1)
g1 <- make_full_graph(n=10)
plot.igraph(g1)
knitr::opts_chunk$set(
echo = TRUE,
message = FALSE,
warning = FALSE
)
fivestargraph <- make_full_graph(n=5)
plot.igraph(fivestargraph)
g2 <- make_empty_graph(n=10)
graph.density(g1)
graph.density(g2)
edge_density(g2)
edge_density(g1)
edge_density(g1,loops = TRUE)
ecount(g1)
vcount(g1)
edge_density(g1)
graph.density(g1)
graph.density(g1,TRUE)
#read GraphA
graphA<-read_graph('graphA.txt',format = "edgelist")
vcA<-vcount(graphA)
ecA<-ecount(graphA)
densityA<-graph.density(graphA)
diaA<-diameter(graphA,directed = "false")
radA<-radius(graphA)
#read GraphB
graphB<-read_graph('graphB.txt')
vcB<-vcount(graphB)
ecB<-ecount(graphB)
densityB<-graph.density(graphB)
diaB<-diameter(graphB,directed = "false")
radB<-radius(graphB)
#read GraphC
graphC<-read_graph('graphC.txt')
vcC<-vcount(graphC)
ecC<-ecount(graphC)
densityC<-graph.density(graphC)
diaC<-diameter(graphC,directed = "false")
radC<-radius(graphC)
header<-c("#Vertices","#Edges","Density")
tab1<-data.frame(Feature=header,GraphA=c(vcA,ecA,densityA),GraphB=c(vcB,ecB,densityB),GraphC=c(vcC,ecC,densityC))
View(tab1)
g3 <- sample_gnp(n=10, 0.4)
g3
plot.igraph(g3)
?sample_gnm
g3 <- sample_gnp(n=10, 1)
plot.igraph(g3)
ecount
ecount(g3)
g3 <- sample_gnp(n=100, 0.5)
ecount(g3)
g3 <- sample_gnp(n=100, 0.2)
ecount(g3)
g3 <- sample_gnp(n=100, 0.2)
ecount(g3)
g3 <- sample_gnp(n=100, 0.2)
ecount(g3)
graph.density(g3)
g3 <- sample_gnp(n=100, 0.1)
graph.density(g3)
plot.igraph(g3)
plot.igraph(graphB)
plot.igraph(graphB)
?read_graph
#read GraphA
graphA<-read_graph('graphA.txt',format = "edgelist",directed = "false")
plot.igraph(graphA)
#read GraphA
graphA<-read_graph('graphA.txt',format = "edgelist",directed = "false")
vcA<-vcount(graphA)
ecA<-ecount(graphA)
densityA<-graph.density(graphA)
diaA<-diameter(graphA,directed = "false")
radA<-radius(graphA)
#read GraphB
graphB<-read_graph('graphB.txt',format = "edgelist",directed = "false")
vcB<-vcount(graphB)
ecB<-ecount(graphB)
densityB<-graph.density(graphB)
diaB<-diameter(graphB,directed = "false")
radB<-radius(graphB)
#read GraphC
graphC<-read_graph('graphC.txt',format = "edgelist",directed = "false")
vcC<-vcount(graphC)
ecC<-ecount(graphC)
densityC<-graph.density(graphC)
diaC<-diameter(graphC,directed = "false")
radC<-radius(graphC)
header<-c("#Vertices","#Edges","Density")
tab1<-data.frame(Feature=header,GraphA=c(vcA,ecA,densityA),GraphB=c(vcB,ecB,densityB),GraphC=c(vcC,ecC,densityC))
header2<-c("Radius","Diameter")
tab2<-data.frame(Feature=header2,GraphA=c(radA,diaA),GraphB=c(radB,diaB),GraphC=c(radC,diaC))
View(tab1)
View(tab2)
#get central nodes
topDA<-head(order(igraph::degree(graphA),decreasing = TRUE),5)
topDB<-head(order(igraph::degree(graphB),decreasing = TRUE),5)
topDC<-head(order(igraph::degree(graphC),decreasing = TRUE),5)
header5<-c("Vertices with highest degree","Vertices with highest betweenness", "Common vertices")
topBA<-(head(order(igraph::betweenness(graphA),decreasing = TRUE),5))
topBB<-(head(order(igraph::betweenness(graphB),decreasing = TRUE),5))
topBC<-(head(order(igraph::betweenness(graphC),decreasing = TRUE),5))
commA<-intersect(topDA,topBA)
commB<-intersect(topDB,topBC)
commC<-intersect(topDC,topBC)
tab5<-data.frame(Feature=header5,GraphA=c(toString(topDA),toString(topBA),toString(commA)),GraphB=c(toString(topDB),toString(topBB),toString(commB)),GraphC=c(toString(topDC),toString(topBC),toString(commC)))
View(tab5)
#get central nodes
topDA<-head(order(igraph::degree(graphA),decreasing = TRUE),5)
degree(graphA)
order(igraph::degree(graphA))
order(igraph::degree(graphA),decreasing = TRUE)
order(degree(graphA),decreasing = TRUE)
?power.law.fit
? barabasi.game
g_powlaw <- barabasi.game(1000)
plot(degree.distribution(g_powlaw),xlab = "log(k)",ylab = "log(P(k))",log="xy",type='o',main = "Fig 4. Degree Distribution GraphC")
g_powlaw <- barabasi.game(10000)
plot(degree.distribution(g_powlaw),xlab = "log(k)",ylab = "log(P(k))",log="xy",type='o',main = "Fig 4. Degree Distribution GraphC")
g_powlaw <- barabasi.game(100000)
plot(degree.distribution(g_powlaw),xlab = "log(k)",ylab = "log(P(k))",log="xy",type='o',main = "Fig 4. Degree Distribution GraphC")
g_powlaw <- barabasi.game(1000000)
plot(degree.distribution(g_powlaw),xlab = "log(k)",ylab = "log(P(k))",log="xy",type='o',main = "Fig 4. Degree Distribution GraphC")
g_powlaw <- barabasi.game(10000)
plot(degree.distribution(g_powlaw),xlab = "log(k)",ylab = "log(P(k))",log="xy",type='o',main = "Fig 4. Degree Distribution GraphC")
g_powlaw <- barabasi.game(10000)
plot(degree.distribution(g_powlaw),xlab = "log(k)",ylab = "log(P(k))",log="xy",type='o',main = "Fig 4. Degree Distribution GraphC")
plot(degree.distribution(g_powlaw)+1,xlab = "log(k)",ylab = "log(P(k))",log="xy",type='o',main = "Fig 4. Degree Distribution GraphC")
plot(degree.distribution(g_powlaw)+0.0001,xlab = "log(k)",ylab = "log(P(k))",log="xy",type='o',main = "Fig 4. Degree Distribution GraphC")
plot(degree.distribution(g_powlaw)+0.00000001,xlab = "log(k)",ylab = "log(P(k))",log="xy",type='o',main = "Fig 4. Degree Distribution GraphC")
plot(degree.distribution(g_powlaw),xlab = "log(k)",ylab = "log(P(k))",log="xy",type='o',main = "Fig 4. Degree Distribution GraphC")
g_powlaw <- barabasi.game(100000)
plot(degree.distribution(g_powlaw),xlab = "log(k)",ylab = "log(P(k))",log="xy",type='o',main = "Fig 4. Degree Distribution GraphC")
g <- sample_pa(10000)
degree_distribution(g)
g <- sample_pa(10000)
plot(degree_distribution(g))
g_powlaw <- sample_pa(10000)
plot(degree.distribution(g_powlaw),xlab = "log(k)",ylab = "log(P(k))",log="xy",type='o',main = "Fig 5. Degree Distribution of a graph following power law")
g_powlaw <- sample_pa(10000)
plot(degree.distribution(g_powlaw),xlab = "log(k)",ylab = "log(P(k))",log="xy",type='o',main = "Fig 5. Degree Distribution of a graph following power law")
g_powlaw <- sample_pa(10000,6)
plot(degree.distribution(g_powlaw),xlab = "log(k)",ylab = "log(P(k))",log="xy",type='o',main = "Fig 5. Degree Distribution of a graph following power law")
g_powlaw <- sample_pa(10000,2)
plot(degree.distribution(g_powlaw),xlab = "log(k)",ylab = "log(P(k))",log="xy",type='o',main = "Fig 5. Degree Distribution of a graph following power law")
g_powlaw <- sample_pa(10000,0)
plot(degree.distribution(g_powlaw),xlab = "log(k)",ylab = "log(P(k))",log="xy",type='o',main = "Fig 5. Degree Distribution of a graph following power law")
g_powlaw <- sample_pa(10000,1)
plot(degree.distribution(g_powlaw),xlab = "log(k)",ylab = "log(P(k))",log="xy",type='o',main = "Fig 5. Degree Distribution of a graph following power law")
g_powlaw <- sample_pa(100000,1)
plot(degree.distribution(g_powlaw),xlab = "log(k)",ylab = "log(P(k))",log="xy",type='o',main = "Fig 5. Degree Distribution of a graph following power law")
g_powlaw <- barabasi.game(100000)
plot(degree.distribution(g_powlaw),xlab = "log(k)",ylab = "log(P(k))",log="xy",type='o',main = "Fig 5. Degree Distribution of a graph following power law")
